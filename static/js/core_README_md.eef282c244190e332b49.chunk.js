(self.webpackChunkexamples=self.webpackChunkexamples||[]).push([["core_README_md"],{91987:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Base_SimpleStore=void 0;let r=n("6656");t.Base_SimpleStore=class e{_get_list=e=>(this[e]=this[e]||[],this[e]);_get_store=e=>(this[e]=this[e]||{},this[e]);_get_map=e=>(this[e]=this[e]||new Map([]),this[e]);_create_base_register=(e,t,n,l)=>(this._get_list(e).push(l),()=>{this[e]=this._get_list(e).filter(e=>e!==l);let{preserve:a=!0}=l,o=(0,r.getFormatPath)(l.path),i=this._get_list(e).find(e=>(0,r.getFormatPath)(e.path)===o);if(!a&&!i){let e=(0,r.toArray)(l.path),a=(0,r.getValue)(this._get_store(n),e),o=(0,r.getValue)(this._get_store(t),e);a!==o&&(this[t]=(0,r.setValue)(this._get_store(t),e,a))}});_create_base_registerWatch=(e,t)=>(this._get_list(e).push(t),()=>{this[e]=this._get_list(e).filter(e=>e!==t)});_create_base_notice=(e,t)=>{let n=(0,r.getFormatPath)(t),l=this._get_list(e).filter(e=>(0,r.getFormatPath)(e.path)===n);l.forEach(e=>{e&&"function"==typeof e.update&&e.update()})};_create_base_bathNotice=(e,t=!0)=>{Array.isArray(t)?t.forEach(t=>{t&&this._create_base_notice(e,(0,r.splitPath)(t))}):"boolean"==typeof t&&t&&this._get_list(e).forEach(e=>{e&&"function"==typeof e.update&&e.update()})};_create_base_noticeWatch=(e,t,n)=>{let l=(0,r.getFormatPath)(n),a=(0,r.getValue)(this._get_store(t),(0,r.toArray)(n));this._get_list(e).forEach(e=>{(0,r.getFormatPath)(e.path)===l&&e.update(a)})};_create_base_updateValue=(e,t,n,l,a,o=!0)=>{let i=(0,r.getValue)(this._get_store(t),(0,r.toArray)(l));this[t]=(0,r.setValue)(this._get_store(t),(0,r.toArray)(l),a),i!==a&&this._create_base_noticeWatch(n,t,l),"boolean"==typeof o&&o?this._create_base_notice(e,l):Array.isArray(o)&&this._create_base_bathNotice(e,o)};_create_base_bathUpdateValue=(e,t,n,l,a=!0)=>{l&&(Object.entries(l).forEach(([e,l])=>{let a=(0,r.getValue)(this._get_store(t),(0,r.toArray)(e));this[t]=(0,r.setValue)(this._get_store(t),(0,r.splitPath)(e),l),a!==l&&this._create_base_noticeWatch(e,n,t)}),"boolean"==typeof a&&a?this._create_base_bathNotice(e,Object.keys(l)):Array.isArray(a)&&this._create_base_bathNotice(e,a))};_create_base_getValue=(e,t)=>t?(0,r.getValue)(this._get_store(e),(0,r.toArray)(t)):this._get_store(e);_create_base_init=(e,t,n)=>{this[t]=n||{},this[e]=(0,r.merge)(this._get_store(t),this._get_store(e))};_create_base_bathRunSelector=(e,t)=>{this._get_map(e).forEach(e=>{let n=e.selector({store:this._get_store(t),simple:this}),r=!1;"function"==typeof e.equalityFn&&(r=e.equalityFn?.(e.preValue,n)),e.preValue=n,!r&&e.updateData(n)})};_create_base_registerSelector=(e,t,n,r,l,a)=>{let o=r({store:this._get_store(t),simple:this});return this._get_map(e).set(n,{preValue:o,selector:r,updateData:l,equalityFn:a}),{data:o,unMount:()=>{this._get_map(e).delete(n)}}};_create_base_getSelectorValue=(e,t,n)=>{let r=this._get_map(e).get(n);if(r){let l=r?.selector({store:this._get_store(t),simple:this});r.preValue=l,this._get_map(e).set(n,r)}return this._get_map(e).get(n)?.preValue}}},7976:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});let r=n("35685");r.__exportStar(n("24234"),t),r.__exportStar(n("64915"),t),r.__exportStar(n("92491"),t)},24234:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.useSimpleWatch=t.useSimpleItem=t.useSimpleStoreItem=t.useMultipleSimple=t.useSimple=t.useUpdate=t.MultipleSimplProvider=t.SimpleStoreProvider=t.useMultipleSimpleStore=t.useSimpleStore=t.MultipleSimpleContext=t.SimpleContext=void 0;let r=n("73156"),l=n("66629");t.SimpleContext=(0,r.createContext)(new l.SimpleStore),t.MultipleSimpleContext=(0,r.createContext)(new l.MultipleSimpleStore);t.useSimpleStore=e=>{let t=(0,r.useRef)();return!t.current&&(e?t.current=e:t.current=new l.SimpleStore),[t.current]};t.useMultipleSimpleStore=e=>{let t=(0,r.useRef)();return!t.current&&(e?t.current=e:t.current=new l.MultipleSimpleStore),[t.current]};t.SimpleStoreProvider=e=>{let{simple:n,children:l,initialValue:a,path:o}=e,[i]=(0,t.useSimpleStore)(n),s=(0,t.useMultipleSimple)();return(0,r.useMemo)(()=>{a&&i.init(a)},[]),(0,r.useEffect)(()=>{let e=()=>void 0;return o&&(e=s.register(o,i)),()=>e?.()},[o]),(0,r.createElement)(t.SimpleContext.Provider,{value:i,children:l})};t.MultipleSimplProvider=e=>{let{multipleSimple:n,children:l}=e,[a]=(0,t.useMultipleSimpleStore)(n);return(0,r.createElement)(t.MultipleSimpleContext.Provider,{value:a,children:l})};t.useUpdate=()=>{let[e,t]=(0,r.useState)(0),n=(0,r.useRef)();return n.current=()=>{t(new Date().getTime())},n};t.useSimple=()=>(0,r.useContext)(t.SimpleContext);t.useMultipleSimple=()=>(0,r.useContext)(t.MultipleSimpleContext);t.useSimpleStoreItem=e=>{let{path:n}=e,l=(0,t.useUpdate)(),a=(0,r.useContext)(t.SimpleContext);return(0,r.useEffect)(()=>{let e=a.register({path:n,update:l.current});return()=>e()},[JSON.stringify(n)]),a},t.useSimpleItem=t.useSimpleStoreItem;t.useSimpleWatch=(e,n,l)=>{let a=(0,r.useRef)(),o=(0,r.useRef)(()=>void 0),i=(0,t.useUpdate)();return o.current=e=>{a.current=e,"function"==typeof l?l(e):i.current()},(0,r.useEffect)(()=>{let t=e.registerWatch({path:n,update:o.current});return()=>t()},[JSON.stringify(n)]),a.current}},64915:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.useSelector=t.createSelectorHook=void 0;let r=n("73156"),l=n("24234"),a=n("6656");t.createSelectorHook=()=>function(e,t=a.isEqual){let n=(0,l.useSimple)(),[,o]=(0,r.useState)({}),i=(0,r.useRef)(),s=(0,r.useRef)(e);s.current=e;let u=(0,r.useRef)(Symbol("useSelector"));i.current=()=>o({});let m=(0,r.useRef)(n.registerSelector(u.current,s.current,i.current,t));return(0,r.useEffect)(()=>()=>m.current?.unMount(),[u.current]),n.getSelectorValue(u.current)},t.useSelector=(0,t.createSelectorHook)()},92491:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.useSimplReducer=void 0;let r=n("73156"),l=(e,t)=>({...e,...t});t.useSimplReducer=(e={},t=l)=>{let[n,a]=(0,r.useReducer)(t,e);return[n,a]}},98922:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});let r=n("35685");r.__exportStar(n("22471"),t),r.__exportStar(n("7976"),t),r.__exportStar(n("6656"),t),r.__exportStar(n("7976"),t)},22471:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0})},66629:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.MultipleSimpleStore=t.SimpleStore=void 0;let r=n("6656"),l=n("91987");class a extends l.Base_SimpleStore{store={};initialValue={};componentList=[];watchList=[];selectorMap=new Map([]);init=e=>{this.initialValue=e||{},this.store=(0,r.merge)(this.initialValue,this.store)};register=e=>(this.componentList.push(e),()=>{this.componentList=this.componentList.filter(t=>t!==e);let{preserve:t=!0}=e,n=(0,r.getFormatPath)(e.path),l=this.componentList.find(e=>(0,r.getFormatPath)(e.path)===n);if(!t&&!l){let t=(0,r.toArray)(e.path),n=(0,r.getValue)(this.initialValue,t),l=(0,r.getValue)(this.store,t);n!==l&&(this.store=(0,r.setValue)(this.store,t,n))}});registerWatch=e=>(this.watchList.push(e),()=>{this.watchList=this.watchList.filter(t=>t!==e)});updateValue=(e,t,n=!0)=>{let l=(0,r.getValue)(this.store,(0,r.toArray)(e));this.store=(0,r.setValue)(this.store,(0,r.toArray)(e),t),l!==t&&this.noticeWatch(e),"boolean"==typeof n&&n?this.notice(e):Array.isArray(n)&&this.bathNotice(n)};bathUpdateValue=(e,t=!0)=>{e&&(Object.entries(e).forEach(([e,t])=>{this.store=(0,r.setValue)(this.store,(0,r.splitPath)(e),t)}),"boolean"==typeof t&&t?this.bathNotice(Object.keys(e)):Array.isArray(t)&&this.bathNotice(t))};getValue=e=>e?(0,r.getValue)(this.store,(0,r.toArray)(e)):this.store;notice=e=>{let t=(0,r.getFormatPath)(e),n=this.componentList.filter(e=>(0,r.getFormatPath)(e.path)===t);n.forEach(e=>{e&&"function"==typeof e.update&&e.update()})};bathNotice=(e=!0)=>{Array.isArray(e)?e.forEach(e=>{e&&this.notice((0,r.splitPath)(e))}):"boolean"==typeof e&&e&&this.componentList.forEach(e=>{e&&"function"==typeof e.update&&e.update()})};noticeWatch=e=>{let t=(0,r.getFormatPath)(e),n=(0,r.getValue)(this.store,(0,r.toArray)(e));this.watchList.forEach(e=>{(0,r.getFormatPath)(e.path)===t&&e.update(n)})};bathRunSelector=()=>{this.selectorMap.forEach(e=>{let t=e.selector({store:this.store,simple:this}),n=!1;"function"==typeof e.equalityFn&&(n=e.equalityFn?.(e.preValue,t)),e.preValue=t,!n&&e.updateData(t)})};registerSelector=(e,t,n,r)=>{let l=t({store:this.store,simple:this});return this.selectorMap.set(e,{preValue:l,selector:t,updateData:n,equalityFn:r}),{data:l,unMount:()=>{this.selectorMap.delete(e)}}};getSelectorValue=e=>{let t=this.selectorMap.get(e);if(t){let n=t?.selector({store:this.store,simple:this});t.preValue=n,this.selectorMap.set(e,t)}return this.selectorMap.get(e)?.preValue}}t.SimpleStore=a;class o{store=new Map([]);register=(e,t)=>(this.store.set(e,t),()=>{this.store.delete(e)});getSimple=e=>this.store.get(e)}t.MultipleSimpleStore=o},57157:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getValue=void 0;t.getValue=(e,t)=>{let n=e;for(let e=0;e<t.length;e+=1){if(null==n)return;n=n[t[e]]}return n}},6656:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.splitPath=t.toArray=t.getFormatPath=void 0;let r=n("35685");r.__exportStar(n("57157"),t),r.__exportStar(n("1677"),t),r.__exportStar(n("30620"),t);t.getFormatPath=e=>Array.isArray(e)?e.join("_"):`${e}`;t.toArray=e=>Array.isArray(e)?e:[e];t.splitPath=e=>e.split("_").filter(Boolean)},30620:function(e,t,n){"use strict";function r(e,t){return e===t?0!==e||0!==t||1/e==1/t:e!=e&&t!=t}Object.defineProperty(t,"__esModule",{value:!0}),t.isEqual=void 0;t.isEqual=function(e,t){if(r(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;let n=Object.keys(e),l=Object.keys(t);if(n.length!==l.length)return!1;for(let l=0;l<n.length;l++)if(!Object.prototype.hasOwnProperty.call(t,n[l])||!r(e[n[l]],t[n[l]]))return!1;return!0}},1677:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.merge=t.setValue=void 0;let r=n("57157"),l=(e,t,n,r)=>{let a;if(!t.length)return n;let[o,...i]=t;return a=e||"number"!=typeof o?e?Array.isArray(e)?[...e]:{...e}:{}:[],r&&void 0===n&&1===i.length?delete a[o][i[0]]:a[o]=l(a[o],i,n,r),a};t.setValue=(e,t,n,a=!1)=>Array.isArray(t)?t.length&&a&&void 0===n&&!(0,r.getValue)(e,t.slice(0,-1))?e:l(e,t,n,a):(console.warn("paths 参数是数组"),e);function a(e){return Array.isArray(e)?[]:{}}let o="undefined"==typeof Reflect?Object.keys:Reflect.ownKeys;t.merge=function(...e){let n=a(e[0]);return e.forEach(e=>{!function l(i,s){var u;let m=new Set(s),p=(0,r.getValue)(e,i),c=Array.isArray(p);if(c||"object"==typeof(u=p)&&null!==u&&Object.getPrototypeOf(u)===Object.prototype){if(!m.has(p)){m.add(p);let e=(0,r.getValue)(n,i);c?n=(0,t.setValue)(n,i,[]):(!e||"object"!=typeof e)&&(n=(0,t.setValue)(n,i,a(p))),o(p).forEach(e=>{l([...i,e],m)})}}else n=(0,t.setValue)(n,i,p)}([])}),n}},11771:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return r}});var r={components:{117:function(){Object.defineProperty(t,"__esModule",{value:!0});let e=function(e){return e&&e.__esModule?e:{default:e}}(n("73156")),r=n("98922"),l=t=>{let{index:n}=t,l=(0,r.useSimpleItem)({path:n}),a=l.getValue("checkValue");return console.log("选中项====>",n),e.default.createElement("button",{style:a===n&&{background:"red"}||{},onClick:()=>{let e=l.getValue("checkValue");l.bathUpdateValue({checkValue:n}),l.bathNotice([`${n}`,`${e}`])}},"点击",n,"号")},a=Array.from({length:10}).map((e,t)=>({index:t}));return()=>e.default.createElement("div",null,e.default.createElement("div",null,"选中项"),e.default.createElement("hr",null),e.default.createElement(r.SimpleStoreProvider,null,a.map(t=>e.default.createElement(l,{key:t.index,index:t.index}))),e.default.createElement("hr",null))}(),158:function(){Object.defineProperty(t,"__esModule",{value:!0});let e=function(e){return e&&e.__esModule?e:{default:e}}(n("73156")),r=n("98922"),l=t=>{let n=(0,r.useSimpleItem)({path:t.name}),l=n.getValue(t.name);return console.log("表单====>",t.name),e.default.createElement("input",{placeholder:`${t.name}`,value:l||"",onChange:e=>{let r=e.target.value;n.updateValue(t.name,r)}})};return()=>{let[t]=(0,r.useSimpleStore)();return e.default.createElement("div",null,e.default.createElement("div",null,"表单"),e.default.createElement("hr",null),e.default.createElement("button",{onClick:()=>{let e=t.getValue();console.log("获取所有值",e)}},"获取表单值"),e.default.createElement("button",{onClick:()=>{t.updateValue("1号",new Date().getTime().toString())}},"设置 1号值 "),e.default.createElement("br",null),e.default.createElement(r.SimpleStoreProvider,{simple:t},e.default.createElement(l,{name:"1号"}),e.default.createElement(l,{name:"1号"}),e.default.createElement(l,{name:"2号"}),e.default.createElement(l,{name:"3号"}),e.default.createElement(l,{name:"4号"}),e.default.createElement(l,{name:"5号"}),e.default.createElement(l,{name:"5号"}),e.default.createElement(l,{name:"6号"}),e.default.createElement(l,{name:"6号"})),e.default.createElement("hr",null))}}(),218:function(){Object.defineProperty(t,"__esModule",{value:!0});let e=function(e){return e&&e.__esModule?e:{default:e}}(n("73156")),r=n("98922"),l=t=>{let n=(0,r.useSimpleItem)({path:t.name}),l=n.getValue(t.name);return e.default.createElement("input",{placeholder:`${t.name}`,value:l||"",onChange:e=>{let r=e.target.value;n.updateValue(t.name,r)}})};return()=>{let[t]=(0,r.useSimpleStore)(),n=(0,r.useSimpleWatch)(t,"1号");return(0,r.useSimpleWatch)(t,"1号",e=>{console.log("打印哈哈哈====>",e)}),console.log("监听 1号 字段 的值变化",n),e.default.createElement("div",null,e.default.createElement("div",null,"表单"),e.default.createElement("hr",null),e.default.createElement("button",{onClick:()=>{t.updateValue("1号",new Date().getTime().toString())}},"设置 1号值 "),e.default.createElement("br",null),e.default.createElement(r.SimpleStoreProvider,{simple:t},e.default.createElement(l,{name:"1号"}),e.default.createElement(l,{name:"1号"}),e.default.createElement(l,{name:"2号"}),e.default.createElement(l,{name:"3号"}),e.default.createElement(l,{name:"4号"}),e.default.createElement(l,{name:"5号"}),e.default.createElement(l,{name:"5号"}),e.default.createElement(l,{name:"6号"}),e.default.createElement(l,{name:"6号"})),e.default.createElement("hr",null))}}(),276:function(){Object.defineProperty(t,"__esModule",{value:!0});let e=function(e){return e&&e.__esModule?e:{default:e}}(n("73156")),r=n("98922"),l=t=>{let n=(0,r.useSimpleItem)({path:t.name}),{value:l}=(0,r.useSelector)(({store:e})=>({value:e[t.name]}));return console.log(`useSelector===${t.name}===>`,l),e.default.createElement("input",{placeholder:`${t.name}`,value:l||"",onChange:e=>{let r=e.target.value;n.updateValue(t.name,r,!1),n.bathRunSelector()}})};return()=>{let[t]=(0,r.useSimpleStore)();return console.log("simple====>",t),e.default.createElement("div",null,e.default.createElement("div",null,"表单"),e.default.createElement("hr",null),e.default.createElement("button",{onClick:()=>{t.updateValue("1号",new Date().getTime().toString(),!1),t.bathRunSelector()}},"设置 1号值 "),e.default.createElement("br",null),e.default.createElement(r.SimpleStoreProvider,{simple:t},e.default.createElement(l,{name:"1号"}),e.default.createElement(l,{name:"2号"}),e.default.createElement(l,{name:"3号"}),e.default.createElement(l,{name:"4号"}),e.default.createElement(l,{name:"5号"}),e.default.createElement(l,{name:"5号"}),e.default.createElement(l,{name:"6号"}),e.default.createElement(l,{name:"6号"})),e.default.createElement("hr",null))}}()},data:{117:{name:117,meta:{},code:'"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:true});const _react=_interop_require_default(require("react"));const _simplestore=require("@carefrees/simple-store");function _interop_require_default(obj){return obj&&obj.__esModule?obj:{default:obj}}const Child=props=>{const{index}=props;const simple=(0,_simplestore.useSimpleItem)({path:index});const checkValue=simple.getValue("checkValue");const onClick=()=>{const preCheckValue=simple.getValue("checkValue");simple.bathUpdateValue({checkValue:index});simple.bathNotice([`${index}`,`${preCheckValue}`])};console.log("选中项====>",index);return _react.default.createElement("button",{style:checkValue===index&&{background:"red"}||{},onClick:onClick},"点击",index,"号")};const list=Array.from({length:10}).map((_,index)=>({index}));const Demo=()=>{return _react.default.createElement("div",null,_react.default.createElement("div",null,"选中项"),_react.default.createElement("hr",null),_react.default.createElement(_simplestore.SimpleStoreProvider,null,list.map(ite=>_react.default.createElement(Child,{key:ite.index,index:ite.index}))),_react.default.createElement("hr",null))};const BaseCode_Export__default__value=Demo;\nreturn BaseCode_Export__default__value;\n',language:"tsx",value:'import React from "react"\nimport { SimpleStoreProvider, useSimpleItem } from "@carefrees/simple-store"\n\n\nconst Child = (props: { index: number }) => {\n  const { index } = props\n  const simple = useSimpleItem({ path: index })\n\n  // 这个值，当组件不重新渲染的时候，获取的值是老的，当重新渲染才是最新的\n  const checkValue = simple.getValue("checkValue")\n  const onClick = () => {\n    // 取最新的渲染值\n    const preCheckValue = simple.getValue("checkValue")\n    simple.bathUpdateValue({ checkValue: index })\n    simple.bathNotice([`${index}`, `${preCheckValue}`])\n  }\n  console.log("选中项====>", index)\n\n  return <button style={checkValue === index && { background: "red" } || {}} onClick={onClick} >点击{index}号</button>\n}\n\n\nconst list = Array.from({ length: 10 }).map((_, index) => ({ index }))\n\nconst Demo = () => {\n  \n  return <div>\n    <div>选中项</div>\n    <hr />\n    <SimpleStoreProvider>\n      {list.map((ite) => <Child key={ite.index} index={ite.index} />)}\n    </SimpleStoreProvider>\n    <hr />\n  </div>\n}\nexport default Demo;'},158:{name:158,meta:{},code:'"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:true});const _react=_interop_require_default(require("react"));const _simplestore=require("@carefrees/simple-store");function _interop_require_default(obj){return obj&&obj.__esModule?obj:{default:obj}}const Item=props=>{const simple=(0,_simplestore.useSimpleItem)({path:props.name});const value=simple.getValue(props.name);const onChange=event=>{const value=event.target.value;simple.updateValue(props.name,value)};console.log("表单====>",props.name);return _react.default.createElement("input",{placeholder:`${props.name}`,value:value||"",onChange:onChange})};const Form=()=>{const[simple]=(0,_simplestore.useSimpleStore)();const onSubmit=()=>{const data=simple.getValue();console.log("获取所有值",data)};const setValue=()=>{simple.updateValue("1号",new Date().getTime().toString())};return _react.default.createElement("div",null,_react.default.createElement("div",null,"表单"),_react.default.createElement("hr",null),_react.default.createElement("button",{onClick:onSubmit},"获取表单值"),_react.default.createElement("button",{onClick:setValue},"设置 1号值 "),_react.default.createElement("br",null),_react.default.createElement(_simplestore.SimpleStoreProvider,{simple:simple},_react.default.createElement(Item,{name:"1号"}),_react.default.createElement(Item,{name:"1号"}),_react.default.createElement(Item,{name:"2号"}),_react.default.createElement(Item,{name:"3号"}),_react.default.createElement(Item,{name:"4号"}),_react.default.createElement(Item,{name:"5号"}),_react.default.createElement(Item,{name:"5号"}),_react.default.createElement(Item,{name:"6号"}),_react.default.createElement(Item,{name:"6号"})),_react.default.createElement("hr",null))};const BaseCode_Export__default__value=Form;\nreturn BaseCode_Export__default__value;\n',language:"tsx",value:'import React from "react"\nimport { SimpleStoreProvider, useSimpleItem, useSimpleStore,useSimpleWatch} from "@carefrees/simple-store"\n\nconst Item = (props: { name: string }) => {\n\n  const simple = useSimpleItem({ path: props.name })\n  const value = simple.getValue(props.name)\n\n  \n\n  const onChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n    const value = event.target.value\n    simple.updateValue(props.name, value)\n  }\n\n  console.log("表单====>", props.name)\n\n  return <input placeholder={`${props.name}`}  value={value || \'\'} onChange={onChange}  />\n}\n\nconst Form = () => {\n  const [simple] = useSimpleStore()\n \n  const onSubmit = () => {\n    const data = simple.getValue()\n    console.log("获取所有值", data)\n  }\n\n  const setValue = () => {\n    simple.updateValue("1号", new Date().getTime().toString())\n  }\n\n  return <div>\n    <div>表单</div>\n    <hr />\n    <button onClick={onSubmit} >获取表单值</button>\n    <button onClick={setValue} >设置 1号值 </button>\n    <br />\n    <SimpleStoreProvider simple={simple} >\n      <Item name="1号" />\n      <Item name="1号" />\n      <Item name="2号" />\n      <Item name="3号" />\n      <Item name="4号" />\n      <Item name="5号" />\n      <Item name="5号" />\n      <Item name="6号" />\n      <Item name="6号" />\n    </SimpleStoreProvider>\n    <hr />\n  </div>\n}\n\nexport default Form\n'},218:{name:218,meta:{},code:'"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:true});const _react=_interop_require_default(require("react"));const _simplestore=require("@carefrees/simple-store");function _interop_require_default(obj){return obj&&obj.__esModule?obj:{default:obj}}const Item=props=>{const simple=(0,_simplestore.useSimpleItem)({path:props.name});const value=simple.getValue(props.name);const onChange=event=>{const value=event.target.value;simple.updateValue(props.name,value)};return _react.default.createElement("input",{placeholder:`${props.name}`,value:value||"",onChange:onChange})};const Form=()=>{const[simple]=(0,_simplestore.useSimpleStore)();const values=(0,_simplestore.useSimpleWatch)(simple,"1号");(0,_simplestore.useSimpleWatch)(simple,"1号",value=>{console.log("打印哈哈哈====>",value)});console.log("监听 1号 字段 的值变化",values);const setValue=()=>{simple.updateValue("1号",new Date().getTime().toString())};return _react.default.createElement("div",null,_react.default.createElement("div",null,"表单"),_react.default.createElement("hr",null),_react.default.createElement("button",{onClick:setValue},"设置 1号值 "),_react.default.createElement("br",null),_react.default.createElement(_simplestore.SimpleStoreProvider,{simple:simple},_react.default.createElement(Item,{name:"1号"}),_react.default.createElement(Item,{name:"1号"}),_react.default.createElement(Item,{name:"2号"}),_react.default.createElement(Item,{name:"3号"}),_react.default.createElement(Item,{name:"4号"}),_react.default.createElement(Item,{name:"5号"}),_react.default.createElement(Item,{name:"5号"}),_react.default.createElement(Item,{name:"6号"}),_react.default.createElement(Item,{name:"6号"})),_react.default.createElement("hr",null))};const BaseCode_Export__default__value=Form;\nreturn BaseCode_Export__default__value;\n',language:"tsx",value:'import React from "react"\nimport { SimpleStoreProvider, useSimpleItem, useSimpleStore,useSimpleWatch} from "@carefrees/simple-store"\n\nconst Item = (props: { name: string }) => {\n  const simple = useSimpleItem({ path: props.name })\n  const value = simple.getValue(props.name)\n\n  const onChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n    const value = event.target.value\n    simple.updateValue(props.name, value)\n  }\n  return <input placeholder={`${props.name}`}  value={value || \'\'} onChange={onChange}  />\n}\n\nconst Form = () => {\n\n  const [simple] = useSimpleStore()\n  /**监听*/\n  const values = useSimpleWatch(simple,"1号")\n\n  /**监听*/\n  useSimpleWatch(simple,"1号",(value)=>{\n    console.log("打印哈哈哈====>",value)\n  })\n\n  console.log("监听 1号 字段 的值变化",values)\n\n  const setValue = () => {\n    simple.updateValue("1号", new Date().getTime().toString())\n  }\n\n  return <div>\n    <div>表单</div>\n    <hr />\n    <button onClick={setValue} >设置 1号值 </button>\n    <br />\n    <SimpleStoreProvider simple={simple} >\n      <Item name="1号" />\n      <Item name="1号" />\n      <Item name="2号" />\n      <Item name="3号" />\n      <Item name="4号" />\n      <Item name="5号" />\n      <Item name="5号" />\n      <Item name="6号" />\n      <Item name="6号" />\n    </SimpleStoreProvider>\n    <hr />\n  </div>\n}\n\nexport default Form\n'},276:{name:276,meta:{},code:'"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:true});const _react=_interop_require_default(require("react"));const _simplestore=require("@carefrees/simple-store");function _interop_require_default(obj){return obj&&obj.__esModule?obj:{default:obj}}const Item=props=>{const simple=(0,_simplestore.useSimpleItem)({path:props.name});const{value}=(0,_simplestore.useSelector)(({store})=>({value:store[props.name]}));const onChange=event=>{const value=event.target.value;simple.updateValue(props.name,value,false);simple.bathRunSelector()};console.log(`useSelector===${props.name}===>`,value);return _react.default.createElement("input",{placeholder:`${props.name}`,value:value||"",onChange:onChange})};const Form=()=>{const[simple]=(0,_simplestore.useSimpleStore)();const setValue=()=>{simple.updateValue("1号",new Date().getTime().toString(),false);simple.bathRunSelector()};console.log("simple====>",simple);return _react.default.createElement("div",null,_react.default.createElement("div",null,"表单"),_react.default.createElement("hr",null),_react.default.createElement("button",{onClick:setValue},"设置 1号值 "),_react.default.createElement("br",null),_react.default.createElement(_simplestore.SimpleStoreProvider,{simple:simple},_react.default.createElement(Item,{name:"1号"}),_react.default.createElement(Item,{name:"2号"}),_react.default.createElement(Item,{name:"3号"}),_react.default.createElement(Item,{name:"4号"}),_react.default.createElement(Item,{name:"5号"}),_react.default.createElement(Item,{name:"5号"}),_react.default.createElement(Item,{name:"6号"}),_react.default.createElement(Item,{name:"6号"})),_react.default.createElement("hr",null))};const BaseCode_Export__default__value=Form;\nreturn BaseCode_Export__default__value;\n',language:"tsx",value:'import React from "react"\nimport { SimpleStoreProvider, useSimpleItem, useSimpleStore,useSimpleWatch ,useSelector} from "@carefrees/simple-store"\n\nconst Item = (props: { name: string }) => {\n  const simple = useSimpleItem({ path: props.name })\n  const { value } = useSelector(({store})=>({ value:store[props.name] }))\n  const onChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n    const value = event.target.value\n    simple.updateValue(props.name, value,false)\n    /**手动触发 useSelector 执行选择器*/\n    simple.bathRunSelector()\n  }\n\n  console.log(`useSelector===${props.name}===>`,value)\n\n  return <input placeholder={`${props.name}`}  value={value || \'\'} onChange={onChange}  />\n}\n\nconst Form = () => {\n\n  const [simple] = useSimpleStore()\n\n  const setValue = () => {\n    simple.updateValue("1号", new Date().getTime().toString(),false)\n    /**手动触发 useSelector 执行选择器*/\n    simple.bathRunSelector()\n  }\n  console.log("simple====>",simple)\n\n  return <div>\n    <div>表单</div>\n    <hr />\n    <button onClick={setValue} >设置 1号值 </button>\n    <br />\n    <SimpleStoreProvider simple={simple} >\n      <Item name="1号" />\n      <Item name="2号" />\n      <Item name="3号" />\n      <Item name="4号" />\n      <Item name="5号" />\n      <Item name="5号" />\n      <Item name="6号" />\n      <Item name="6号" />\n    </SimpleStoreProvider>\n    <hr />\n  </div>\n}\n\nexport default Form\n'}},source:'# `simple-store`\n\n状态管理\n\n- [X] 1. 定向更新组件\n- [X] 2. 数据存储\n- [X] 3. 监听值变化\n\n## 状态包裹组件\n\n- `SimpleStoreProvider`\n- `MultipleSimplProvider` \n\n## hooks\n\n- `useSimpleStore` 实例化方法\n- `useSimpleWatch` 监听值变化\n- `useSimple` 子组件中获取实例\n- `useSimpleItem` 子组件使用数据更新和取值\n- `useMultipleSimpleStore`实例化收集多个状态管理方法\n- `useMultipleSimple` 子组件中获取实例\n\n## 参数\n\n```ts\n/**状态存储*/\nexport declare class SimpleStore<T extends {} = any> {\n    /**值存储*/\n    private store;\n    private initialValue;\n    /**组件更新方法集合*/\n    componentList: RegisterProps[];\n    /**监听字段值变化*/\n    watchList: RegisterWatchProps[];\n    /**设置初始值*/\n    init: (initialValue?: T) => void;\n    /**注册组件更新方法*/\n    register: (props: RegisterProps) => () => void;\n    /**注册监听字段*/\n    registerWatch: (props: RegisterWatchProps) => () => void;\n    /**更新值*/\n    updateValue: <K = any>(path: PathTypes, value: K, notice?: boolean | string[]) => void;\n    /**批量数据更新*/\n    bathUpdateValue: (values: Record<string, any>, notice?: boolean | string[]) => void;\n    /**获取值*/\n    getValue: (path?: PathTypes) => any;\n    /**通知组件更新*/\n    notice: (path: PathTypes) => void;\n    /**\n     * 批量更新组件，\n     *\n     * 当不传递值的时候，更新所有组件\n    */\n    bathNotice: (paths?: string[] | boolean) => void;\n    /**通知监听*/\n    noticeWatch: (path: PathTypes) => void;\n}\n\nexport type PathTypes = number | string | (number | string)[]\n\nexport interface RegisterProps {\n  path: PathTypes,\n  update: Function\n  /**是否保存*/\n  preserve?: boolean\n}\n\nexport declare class MultipleSimpleStore {\n    /**数据存储*/\n    store: Map<string, SimpleStore>;\n    /**注册*/\n    register: (path: string, simple: SimpleStore) => void;\n    /**获取单个 simple */\n    getSimple: (path: string) => SimpleStore<any>;\n}\n\nexport interface RegisterWatchProps {\n    path: PathTypes;\n    update: (value: any) => void;\n}\nexport interface SimpleStoreProviderProps<T extends {} = any> {\n    simple?: SimpleStore;\n    children?: React.ReactNode;\n    initialValue?: T;\n    path?: string;\n}\nexport interface UseSimpleStoreItemProps {\n    /**路径*/\n    path: PathTypes;\n}\nexport interface UseSimpleItemProps extends UseSimpleStoreItemProps {\n}\nexport interface MultipleSimplProviderProps {\n    multipleSimple?: MultipleSimpleStore;\n    children?: React.ReactNode;\n}\n\nimport { SimpleStoreProviderProps, PathTypes, UseSimpleItemProps, MultipleSimplProviderProps } from "./interface";\nexport declare const SimpleContext: import("react").Context<SimpleStore<any>>;\nexport declare const MultipleSimpleContext: import("react").Context<MultipleSimpleStore>;\nexport declare const useSimpleStore: <T extends {} = any>(simple?: SimpleStore) => SimpleStore<T>[];\nexport declare const useMultipleSimpleStore: (multipleSimple?: MultipleSimpleStore) => MultipleSimpleStore[];\nexport declare const SimpleStoreProvider: <T extends {} = any>(props: SimpleStoreProviderProps<T>) => import("react").FunctionComponentElement<import("react").ProviderProps<SimpleStore<any>>>;\nexport declare const MultipleSimplProvider: (props: MultipleSimplProviderProps) => import("react").FunctionComponentElement<import("react").ProviderProps<MultipleSimpleStore>>;\n/**更新页面状态*/\nexport declare const useUpdate: () => import("react").MutableRefObject<Function>;\nexport declare const useSimple: <T extends {} = any>() => SimpleStore<T>;\nexport declare const useMultipleSimple: () => MultipleSimpleStore;\nexport declare const useSimpleStoreItem: <T extends {} = any>(props: UseSimpleItemProps) => SimpleStore<T>;\nexport declare const useSimpleItem: <T extends {} = any>(props: UseSimpleItemProps) => SimpleStore<T>;\nexport declare const useSimpleWatch: <T extends {} = any>(simple: SimpleStore<T>, path: PathTypes, fun?: (value: any) => void) => any;\n\n```\n\n## 选中案例\n\n```tsx mdx:preview\nimport React from "react"\nimport { SimpleStoreProvider, useSimpleItem } from "@carefrees/simple-store"\n\n\nconst Child = (props: { index: number }) => {\n  const { index } = props\n  const simple = useSimpleItem({ path: index })\n\n  // 这个值，当组件不重新渲染的时候，获取的值是老的，当重新渲染才是最新的\n  const checkValue = simple.getValue("checkValue")\n  const onClick = () => {\n    // 取最新的渲染值\n    const preCheckValue = simple.getValue("checkValue")\n    simple.bathUpdateValue({ checkValue: index })\n    simple.bathNotice([`${index}`, `${preCheckValue}`])\n  }\n  console.log("选中项====>", index)\n\n  return <button style={checkValue === index && { background: "red" } || {}} onClick={onClick} >点击{index}号</button>\n}\n\n\nconst list = Array.from({ length: 10 }).map((_, index) => ({ index }))\n\nconst Demo = () => {\n  \n  return <div>\n    <div>选中项</div>\n    <hr />\n    <SimpleStoreProvider>\n      {list.map((ite) => <Child key={ite.index} index={ite.index} />)}\n    </SimpleStoreProvider>\n    <hr />\n  </div>\n}\nexport default Demo;\n```\n\n## 表单案例\n\n```tsx mdx:preview\nimport React from "react"\nimport { SimpleStoreProvider, useSimpleItem, useSimpleStore,useSimpleWatch} from "@carefrees/simple-store"\n\nconst Item = (props: { name: string }) => {\n\n  const simple = useSimpleItem({ path: props.name })\n  const value = simple.getValue(props.name)\n\n  \n\n  const onChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n    const value = event.target.value\n    simple.updateValue(props.name, value)\n  }\n\n  console.log("表单====>", props.name)\n\n  return <input placeholder={`${props.name}`}  value={value || \'\'} onChange={onChange}  />\n}\n\nconst Form = () => {\n  const [simple] = useSimpleStore()\n \n  const onSubmit = () => {\n    const data = simple.getValue()\n    console.log("获取所有值", data)\n  }\n\n  const setValue = () => {\n    simple.updateValue("1号", new Date().getTime().toString())\n  }\n\n  return <div>\n    <div>表单</div>\n    <hr />\n    <button onClick={onSubmit} >获取表单值</button>\n    <button onClick={setValue} >设置 1号值 </button>\n    <br />\n    <SimpleStoreProvider simple={simple} >\n      <Item name="1号" />\n      <Item name="1号" />\n      <Item name="2号" />\n      <Item name="3号" />\n      <Item name="4号" />\n      <Item name="5号" />\n      <Item name="5号" />\n      <Item name="6号" />\n      <Item name="6号" />\n    </SimpleStoreProvider>\n    <hr />\n  </div>\n}\n\nexport default Form\n\n```\n\n## 数据监听\n\n```tsx mdx:preview\nimport React from "react"\nimport { SimpleStoreProvider, useSimpleItem, useSimpleStore,useSimpleWatch} from "@carefrees/simple-store"\n\nconst Item = (props: { name: string }) => {\n  const simple = useSimpleItem({ path: props.name })\n  const value = simple.getValue(props.name)\n\n  const onChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n    const value = event.target.value\n    simple.updateValue(props.name, value)\n  }\n  return <input placeholder={`${props.name}`}  value={value || \'\'} onChange={onChange}  />\n}\n\nconst Form = () => {\n\n  const [simple] = useSimpleStore()\n  /**监听*/\n  const values = useSimpleWatch(simple,"1号")\n\n  /**监听*/\n  useSimpleWatch(simple,"1号",(value)=>{\n    console.log("打印哈哈哈====>",value)\n  })\n\n  console.log("监听 1号 字段 的值变化",values)\n\n  const setValue = () => {\n    simple.updateValue("1号", new Date().getTime().toString())\n  }\n\n  return <div>\n    <div>表单</div>\n    <hr />\n    <button onClick={setValue} >设置 1号值 </button>\n    <br />\n    <SimpleStoreProvider simple={simple} >\n      <Item name="1号" />\n      <Item name="1号" />\n      <Item name="2号" />\n      <Item name="3号" />\n      <Item name="4号" />\n      <Item name="5号" />\n      <Item name="5号" />\n      <Item name="6号" />\n      <Item name="6号" />\n    </SimpleStoreProvider>\n    <hr />\n  </div>\n}\n\nexport default Form\n\n```\n\n## useSelector使用\n\n```tsx mdx:preview\nimport React from "react"\nimport { SimpleStoreProvider, useSimpleItem, useSimpleStore,useSimpleWatch ,useSelector} from "@carefrees/simple-store"\n\nconst Item = (props: { name: string }) => {\n  const simple = useSimpleItem({ path: props.name })\n  const { value } = useSelector(({store})=>({ value:store[props.name] }))\n  const onChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n    const value = event.target.value\n    simple.updateValue(props.name, value,false)\n    /**手动触发 useSelector 执行选择器*/\n    simple.bathRunSelector()\n  }\n\n  console.log(`useSelector===${props.name}===>`,value)\n\n  return <input placeholder={`${props.name}`}  value={value || \'\'} onChange={onChange}  />\n}\n\nconst Form = () => {\n\n  const [simple] = useSimpleStore()\n\n  const setValue = () => {\n    simple.updateValue("1号", new Date().getTime().toString(),false)\n    /**手动触发 useSelector 执行选择器*/\n    simple.bathRunSelector()\n  }\n  console.log("simple====>",simple)\n\n  return <div>\n    <div>表单</div>\n    <hr />\n    <button onClick={setValue} >设置 1号值 </button>\n    <br />\n    <SimpleStoreProvider simple={simple} >\n      <Item name="1号" />\n      <Item name="2号" />\n      <Item name="3号" />\n      <Item name="4号" />\n      <Item name="5号" />\n      <Item name="5号" />\n      <Item name="6号" />\n      <Item name="6号" />\n    </SimpleStoreProvider>\n    <hr />\n  </div>\n}\n\nexport default Form\n\n```',headings:[],headingsList:[]}}}]);